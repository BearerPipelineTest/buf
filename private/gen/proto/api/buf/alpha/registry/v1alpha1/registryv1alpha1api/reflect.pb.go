// Copyright 2020-2022 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go-api. DO NOT EDIT.

package registryv1alpha1api

import (
	context "context"
	v1 "github.com/bufbuild/buf/private/gen/proto/go/buf/alpha/image/v1"
	v1alpha1 "github.com/bufbuild/buf/private/gen/proto/go/buf/alpha/reflect/v1alpha1"
)

// ReflectionService encodes and decodes serialized descriptors.
type ReflectionService interface {
	// Encode encodes descriptors into binary using either an image or
	// module_info.
	Encode(
		ctx context.Context,
		descriptorBytes []byte,
		typeName string,
		image *v1.Image,
		moduleInfo *v1alpha1.ModuleInfo,
	) (result []byte, err error)
	// Decode decodes a serialized descriptor. It automatically resolves the
	// image if the serialized descriptor embeds DescriptorInfo. Otherwise, it
	// uses either an image or module_info to decode the payload according to
	// the type_name.
	Decode(
		ctx context.Context,
		descriptorBytes []byte,
		typeName string,
		image *v1.Image,
		moduleInfo *v1alpha1.ModuleInfo,
	) (result []byte, err error)
}
