dist: .build/release/buf/workspace/dist

env:
  - CGO_ENABLED=0

builds:
  - id: buf
    main: ./cmd/buf
    binary: bin/buf
    gobinary: .build/release/buf/go
    flags:
      - -trimpath
    ldflags:
      - -s -w
    goos:
      - darwin
      - linux
    goarch:
      - amd64
      - arm64

  - id: buf-windows
    main: ./cmd/buf
    binary: bin/buf
    gobinary: .build/release/buf/go
    flags:
      - -trimpath
    ldflags:
      - -s -w
    goos:
      - windows
    goarch:
      - amd64
      - arm64

  - id: protoc-gen-buf-breaking
    main: ./cmd/protoc-gen-buf-breaking
    binary: bin/protoc-gen-buf-breaking
    gobinary: .build/release/buf/go
    flags:
      - -trimpath
    ldflags:
      - -s -w
    goos:
      - darwin
      - linux
    goarch:
      - amd64
      - arm64

  - id: protoc-gen-buf-breaking-windows
    main: ./cmd/protoc-gen-buf-breaking
    binary: bin/protoc-gen-buf-breaking
    gobinary: .build/release/buf/go
    flags:
      - -trimpath
    ldflags:
      - -s -w
    goos:
      - windows
    goarch:
      - amd64
      - arm64

  - id: protoc-gen-buf-lint
    main: ./cmd/protoc-gen-buf-lint
    binary: bin/protoc-gen-buf-lint
    gobinary: .build/release/buf/go
    flags:
      - -trimpath
    ldflags:
      - -s -w
    goos:
      - darwin
      - linux
    goarch:
      - amd64
      - arm64

  - id: protoc-gen-buf-lint-windows
    main: ./cmd/protoc-gen-buf-lint
    binary: bin/protoc-gen-buf-lint
    gobinary: .build/release/buf/go
    flags:
      - -trimpath
    ldflags:
      - -s -w
    goos:
      - windows
    goarch:
      - amd64
      - arm64

archives:
  - id: bin
    builds:
      - buf
      - buf-windows
      - protoc-gen-buf-breaking
      - protoc-gen-buf-breaking-windows
      - protoc-gen-buf-lint
      - protoc-gen-buf-lint-windows
    format: binary
    name_template: '{{ .Binary }}-{{ .Os }}-{{ if and (eq .Os "Linux") (eq .Arch "arm64") }}aarch64{{ else }}{{ .Arch }}{{ end }}'
    replacements:
      amd64: x86_64
      darwin: Darwin
      linux: Linux
      windows: Windows

  - id: tarball
    builds:
      - buf
      - protoc-gen-buf-breaking
      - protoc-gen-buf-lint
    format: tar.gz
    name_template: '{{ .Binary }}-{{ .Os }}-{{ if and (eq .Os "Linux") (eq .Arch "arm64") }}aarch64{{ else }}{{ .Arch }}{{ end }}'
    replacements:
      amd64: x86_64
      darwin: Darwin
      linux: Linux
    files:
      - LICENSE
      - src: .build/release/buf/workspace/etc/bash_completion.d/buf
        dst: etc/bash_completion.d/
        strip_parent: true
      - src: .build/release/buf/workspace/share/fish/vendor_completions.d/buf.fish
        dst: share/fish/vendor_completions.d/
        strip_parent: true
      - src: .build/release/buf/workspace/share/zsh/site-functions/_buf
        dst: share/zsh/site-functions/
        strip_parent: true
    wrap_in_directory: buf

checksum:
  name_template: sha256.txt

signs:
  - artifacts: checksum
    stdin_file: .build/release/buf/workspace/minisignpass
    signature: '${artifact}.minisig'
    cmd: minisign
    args: [ -x, '${signature}', -Sm, '${artifact}', -s, .build/release/buf/workspace/minisignsecret ]

publishers:
  - cmd: cp {{ abs .ArtifactPath }} .build/release/buf/assets/{{ .ArtifactName }}
    checksum: true
    signature: true

release:
  disable: true
